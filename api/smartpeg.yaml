swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Smart Peg"
host: "smart.peg"
basePath: "/api"
tags:
- name: "peg"
  description: "API calls that are issued by the peg"
- name: "app"
  description: "API calls that are issued by the app"
schemes:
- "http"
paths:
  /peg/{pegId}/readings:
    post:
      tags:
      - "peg"
      summary: "Add a new reading to the database"
      description: ""
      operationId: "addReading"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pegId"
        in: "path"
        description: "The ID of the peg that is reporting"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "The reading that should be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Reading"
      responses:
        200:
          description: "successful operation"
    get:
      tags:
      - "app"
      summary: "Returns readings for a specific peg"
      description: ""
      operationId: "getReadings"
      produces:
      - "application/json"
      parameters:
      - name: "pegId"
        in: "path"
        description: "The ID of the peg that should be used"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Reading"
        404:
          description: "Peg ID not found"
  /peg/{pegId}/predictions:
    get:
      tags:
      - "app"
      summary: "Returns predictions for a specific peg"
      description: ""
      operationId: "getPredictions"
      produces:
      - "application/json"
      parameters:
      - name: "pegId"
        in: "path"
        description: "The ID of the peg that should be used"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Prediction"
        404:
          description: "Peg ID not found"
  /peg/{pegId}/:
    get:
      tags:
      - "app"
      summary: "Returns general infos for a specific peg"
      description: ""
      operationId: "getInfos"
      produces:
      - "application/json"
      parameters:
      - name: "pegId"
        in: "path"
        description: "The ID of the peg that should be used"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Peg"
        404:
          description: "Peg ID not found"
definitions:
  Reading:
    type: "object"
    description: "Contains a reading for a specific peg"
    required:
    - "measurements"
    properties:
      measurements:
        $ref: "#/definitions/Measurement"
      timestamp:
        $ref: "#/definitions/Timestamp"
  Prediction:
    type: "object"
    description: "..."
    properties:
      dryAt:
        $ref: "#/definitions/Timestamp"
  Measurement:
    type: "object"
    description: "A set of values that have been measured together"
    properties:
      temperature:
        type: "number"
        format: "float"
        description: "Temperature in degrees celsius"
      humidity:
        type: "number"
        format: "float"
        description: "Humidity in percent (0-100)"
      conductance:
        type: "integer"
        description: "Conductance of the clothes, raw value (0-...)"
  Timestamp:
    type: "object"
    description: "Simple object to store a date and time value"
    properties:
      day:
        type: "integer"
        description: "Day of month (1-31)"
      month:
        type: "integer"
        description: "Month (1-12)"
      year:
        type: "integer"
        description: "Year"
      hour:
        type: "integer"
        description: "Hour of day (0-23)"
      minute:
        type: "integer"
        description: "Minute (0-59)"
      second:
        type: "integer"
        description: "Second (0-59)"
  Peg:
    type: "object"
    description: "Informations about the peg"
    properties:
      id:
        type: "integer"
        description: "The id of the peg"
      bat_status:
        type: "integer"
        description: "the longevity of the battery"
      measurements:
        type: "array"
        items:
          $ref: "#/definitions/Measurement"
      predictions:
        type: "array"
        items:
          $ref: "#/definitions/Prediction"
